body {
    margin: 0;
    overflow: hidden;
    background-color: #000;
    font-family: 'Nasalization', sans-serif;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    -webkit-user-drag: none;
    user-drag: none;
}

canvas {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    touch-action: none;
}

#label-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
}

.label {
    color: #fff;
    font-family: 'Nasalization', sans-serif;
    font-size: 16px;
    text-shadow: 0 0 5px #ffffff;
    white-space: nowrap;
    text-align: center;
}
.label-line {
    width: 1px;
    height: 50px;
    background: linear-gradient(to bottom, rgba(255, 255, 255, 0.8), rgba(255, 255, 255, 0));
    margin: 8px auto 0;
}

/* NEU: Die "Matte Glass" Material-Definition */
.matte-glass {
    /* 1. Hintergrund abdunkeln */
    background-color: rgba(30, 30, 30, 0.5);
    
    /* 2. Hintergrund unscharf machen */
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    
    /* 3. "Warp"-Effekt simulieren */
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: inset 0 0 0 1.5px rgba(255, 255, 255, 0.05);

    transition: background-color 0.2s ease, opacity 1s ease-out;
}
.matte-glass:hover {
    background-color: rgba(50, 50, 50, 0.6);
}


#info, #joystick-zone, #mute-button, #analyze-button {
    opacity: 0;
    pointer-events: none;
}
#info.ui-visible, #joystick-zone.ui-visible, #mute-button.ui-visible, #analyze-button.ui-visible {
    opacity: 1;
    pointer-events: auto;
}

#info {
    position: absolute;
    top: 10px;
    width: 100%;
    text-align: center;
    color: rgba(255, 255, 255, 0.8);
    font-size: 14px;
    text-shadow: 2px 2px 4px #000000;
    z-index: 10;
    transition: opacity 1s ease-out; /* Übergang hinzugefügt */
}

#joystick-zone {
    position: absolute;
    bottom: 20px;
    left: 20px;
    width: 160px;
    height: 160px;
    border-radius: 50%;
    z-index: 5;
}

#mute-button {
    position: absolute;
    top: 20px;
    right: 20px;
    width: 48px;
    height: 48px;
    border-radius: 16px;
    cursor: pointer;
    padding: 12px;
    z-index: 20;
}

#mute-button svg { width: 100%; height: 100%; }
#mute-button #speaker-icon { fill: white; }
#mute-button #mute-slash { fill: none; stroke: white; stroke-width: 2.5; stroke-linecap: round; opacity: 0; transform-origin: center; transform: scale(0.8); transition: opacity 0.3s ease, transform 0.3s ease; }
#mute-button.muted #mute-slash { opacity: 1; transform: scale(1); }

#analyze-button {
    position: absolute;
    top: 80px;
    right: 20px;
    padding: 12px 24px;
    color: white;
    font-family: 'Nasalization', sans-serif;
    font-size: 16px;
    cursor: pointer;
    border-radius: 50px;
    z-index: 20;
}

#loading-screen {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.3);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 100;
    transition: opacity 0.5s ease;
    cursor: default;
}
#loading-screen.clickable {
    cursor: pointer;
}

.loading-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    color: white;
    text-shadow: 0 0 10px rgba(0,0,0,0.5);
    z-index: 101;
}

#loading-title {
    font-size: 1.8em;
    margin: 0;
    font-weight: normal;
}

#loading-percentage {
    font-size: 1.2em;
    margin: 20px 0 10px;
}

#progress-bar-container {
    width: 300px;
    max-width: 80%;
    height: 16px;
    border-radius: 50px;
    padding: 3px;
    overflow: hidden;
}

#progress-bar {
    width: 0%;
    height: 100%;
    background: linear-gradient(90deg, rgba(255,255,255,0.7), rgba(255,255,255,1));
    border-radius: 50px;
    transition: width 0.3s ease-out;
}

#media-player { display: none; }```

---

### 3. `main.js` (Final - Unverändert)

An der JavaScript-Logik sind **keine Änderungen** notwendig, da die visuellen Anpassungen rein über HTML-Klassen und CSS gesteuert werden. Sie können den letzten funktionierenden `main.js`-Code unverändert weiterverwenden.
